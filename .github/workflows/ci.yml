name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            app-target
            usr-local-cargo-registry
            usr-local-cargo-git-db
          key: ${{ runner.os }}-cargo-a-${{ hashFiles('**/Cargo.lock') }}

      - name: Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "app-target": "/app/target",
              "usr-local-cargo-registry": "/usr/local/cargo/registry",
              "usr-local-cargo-git-db": "/usr/local/cargo/git/db"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ghcr.io/${{ github.repository }}:latest
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy with Watchtower
        uses: darnfish/watchtower-update@v3.2
        with:
          url: https://portainer.ricardoramos.me/watchtower/v1/update
          api_token: "${{ secrets.WATCHTOWER_HTTP_API_TOKEN }}"
          images: "ghcr.io/${{ github.repository }}"
